
name: Release

on:
  push:
    tags:
      - '*.*.*'

jobs:
  
  ########################
  # RELEASE CREATION JOB #
  ########################
  job_release:
    name: Create Release
    runs-on: ubuntu-latest
    outputs: 
      upload_url: ${{ steps.create_release.outputs.upload_url }}
      tag: ${{ steps.tag.outputs.tag }}
    steps:
    - name: Get tag
      id: tag
      run: |
        echo ::set-output name=tag::${GITHUB_REF#refs/tags/}
    - uses: actions/checkout@v2
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ steps.tag.outputs.tag }}
        release_name: vpype ${{ steps.tag.outputs.tag }}
        draft: true
        prerelease: false


  ##################
  # UPLOAD TO PYPI #
  ##################
  job_pypi:
    name: Upload to PyPI
    runs-on: ubuntu-latest
    needs: job_release
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python 3.9
        uses: actions/setup-python@v2
        with:
          python-version: 3.9
      - name: Build
        id: build
        run: |
          pip install -r dev-requirement.txt
          pip install .
          python setup.py sdist bdist_wheel
          echo ::set-output name=version::`python -c "import vnoise;print(vnoise.__version__)"`
      - name: Upload File Assets
        uses: actions/upload-release-asset@v1.0.2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.job_release.outputs.upload_url }}
          asset_path: dist/vnoise-${{ steps.build.outputs.version }}.tar.gz
          asset_name: vnoise-${{ steps.build.outputs.version }}.tar.gz
          asset_content_type: application/gzip
      - name: pypi-publish
        uses: pypa/gh-action-pypi-publish@v1.4.1
        with:
          repository_url: https://test.pypi.org/legacy/
          password: ${{ secrets.TEST_PYPI_TOKEN }}
          # skip_existing: true
          verbose: true
